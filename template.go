package main

var templateModelBase64 = "cGFja2FnZSBzYW1wbGVfc3dhZ2dlcgoKdHlwZSBJbmZvIHN0cnVjdCB7CglEZXNjcmlwdGlvbiAgICBzdHJpbmcgYGpzb246ImRlc2NyaXB0aW9uImAKCVZlcnNpb24gICAgICAgIHN0cmluZyBganNvbjoidmVyc2lvbiJgCglUaXRsZSAgICAgICAgICBzdHJpbmcgYGpzb246InRpdGxlImAKCVRlcm1zT2ZTZXJ2aWNlIHN0cmluZyBganNvbjoidGVybXNPZlNlcnZpY2UiYAoJQ29udGFjdCAgICAgICAgc3RydWN0IHsKCQlFbWFpbCBzdHJpbmcgYGpzb246ImVtYWlsImAKCX0gYGpzb246ImNvbnRhY3QiYAoJTGljZW5zZSBzdHJ1Y3QgewoJCU5hbWUgc3RyaW5nIGBqc29uOiJuYW1lImAKCQlVUkwgIHN0cmluZyBganNvbjoidXJsImAKCX0gYGpzb246ImxpY2Vuc2UiYAp9Cgp0eXBlIFJvdXRlciBzdHJ1Y3QgewoJVGFncyAgICAgICAgW11zdHJpbmcgICAgICAgICAgICBganNvbjoidGFncyJgCglTdW1tYXJ5ICAgICBzdHJpbmcgICAgICAgICAgICAgIGBqc29uOiJzdW1tYXJ5ImAKCURlc2NyaXB0aW9uIHN0cmluZyAgICAgICAgICAgICAgYGpzb246ImRlc2NyaXB0aW9uImAKCU9wZXJhdGlvbklEIHN0cmluZyAgICAgICAgICAgICAgYGpzb246Im9wZXJhdGlvbklkImAKCUNvbnN1bWVzICAgIFtdc3RyaW5nICAgICAgICAgICAgYGpzb246ImNvbnN1bWVzImAKCVByb2R1Y2VzICAgIFtdc3RyaW5nICAgICAgICAgICAgYGpzb246InByb2R1Y2VzImAKCVBhcmFtZXRlcnMgIFtdUGFyYW1ldGVyICAgICAgICAgYGpzb246InBhcmFtZXRlcnMiYAoJUmVzcG9uc2VzICAgbWFwW3N0cmluZ11SZXNwb25zZSBganNvbjoicmVzcG9uc2VzImAKfQoKdHlwZSBQYXJhbWV0ZXIgc3RydWN0IHsKCUluICAgICAgICAgIHN0cmluZyBganNvbjoiaW4iYAoJTmFtZSAgICAgICAgc3RyaW5nIGBqc29uOiJuYW1lImAKCVR5cGUgICAgICAgIHN0cmluZyBganNvbjoidHlwZSJgCglEZXNjcmlwdGlvbiBzdHJpbmcgYGpzb246ImRlc2NyaXB0aW9uImAKCVJlcXVpcmVkICAgIGJvb2wgICBganNvbjoicmVxdWlyZWQiYAoJU2NoZW1hICAgICAgKnN0cnVjdCB7CgkJUmVmIHN0cmluZyBganNvbjoiJHJlZiJgCgl9IGBqc29uOiJzY2hlbWEsb21pdGVtcHR5ImAKfQoKdHlwZSBSZXNwb25zZSBzdHJ1Y3QgewoJRGVzY3JpcHRpb24gc3RyaW5nIGBqc29uOiJkZXNjcmlwdGlvbiJgCglTY2hlbWEgICAgICBzdHJ1Y3QgewoJCVR5cGUgIHN0cmluZyBganNvbjoidHlwZSJgCgkJSXRlbXMgc3RydWN0IHsKCQkJUmVmIHN0cmluZyBganNvbjoiJHJlZiJgCgkJfSBganNvbjoiaXRlbXMiYAoJCVJlZiBzdHJpbmcgYGpzb246IiRyZWYiYAoJfSBganNvbjoic2NoZW1hImAKfQoKdHlwZSBQcm9wZXJ0eSBzdHJ1Y3QgewoJVHlwZSAgICAgICAgc3RyaW5nICAgICAgICAgIGBqc29uOiJ0eXBlLG9taXRlbXB0eSJgCglGb3JtYXQgICAgICBzdHJpbmcgICAgICAgICAgYGpzb246ImZvcm1hdCxvbWl0ZW1wdHkiYAoJRGVzY3JpcHRpb24gc3RyaW5nICAgICAgICAgIGBqc29uOiJkZXNjcmlwdGlvbixvbWl0ZW1wdHkiYAoJUmVmICAgICAgICAgc3RyaW5nICAgICAgICAgIGBqc29uOiIkcmVmLG9taXRlbXB0eSJgCglJdGVtcyAgICAgICAqUHJvcGVydHkgICAgICAgYGpzb246Iml0ZW1zLG9taXRlbXB0eSJgCglQcm9wZXJ0aWVzICAqTmVzdGVkUHJvcGVydHkgYGpzb246InByb3BlcnRpZXMsb21pdGVtcHR5ImAKfQoKdHlwZSBOZXN0ZWRQcm9wZXJ0eSBzdHJ1Y3QgewoJSWQgICBzdHJpbmcgYGpzb246ImlkImAKCU5hbWUgc3RyaW5nIGBqc29uOiJuYW1lImAKfQoKdHlwZSBEZWZpbml0aW9uIHN0cnVjdCB7CglUeXBlICAgICAgIHN0cmluZyAgICAgICAgICAgICAgYGpzb246InR5cGUiYAoJUHJvcGVydGllcyBtYXBbc3RyaW5nXVByb3BlcnR5IGBqc29uOiJwcm9wZXJ0aWVzImAKfQoKdHlwZSBTd2FnZ2VyIHN0cnVjdCB7CglTd2FnZ2VyICAgICBzdHJpbmcgICAgICAgICAgICAgICAgIGBqc29uOiJzd2FnZ2VyImAKCUluZm8gICAgICAgICpJbmZvICAgICAgICAgICAgICAgICAgYGpzb246ImluZm8iYAoJSG9zdCAgICAgICAgc3RyaW5nICAgICAgICAgICAgICAgICBganNvbjoiaG9zdCJgCglCYXNlUGF0aCAgICBzdHJpbmcgICAgICAgICAgICAgICAgIGBqc29uOiJiYXNlUGF0aCJgCglTY2hlbWVzICAgICBbXXN0cmluZyAgICAgICAgICAgICAgIGBqc29uOiJzY2hlbWVzImAKCVBhdGhzICAgICAgIG1hcFtzdHJpbmddTWV0aG9kICAgICAgYGpzb246InBhdGhzImAKCURlZmluaXRpb25zIG1hcFtzdHJpbmddKkRlZmluaXRpb24gYGpzb246ImRlZmluaXRpb25zImAKfQoKdHlwZSBNZXRob2QgbWFwW3N0cmluZ11Sb3V0ZXIK"

var templateParseBase64 = "cGFja2FnZSBzYW1wbGVfc3dhZ2dlcgoKaW1wb3J0ICgKCSJlbmNvZGluZy9qc29uIgoJImZtdCIKCSJyZWZsZWN0IgoJInN0cmluZ3MiCikKCmNvbnN0ICgKCXR5cGVTdHJpbmcgPSAic3RyaW5nIgoJdHlwZUludCAgICA9ICJpbnQiCgl0eXBlTnVtYmVyID0gIm51bWJlciIKCXR5cGVPYmplY3QgPSAib2JqZWN0IgoJdHlwZUFycmF5ICA9ICJhcnJheSIKCXR5cGVNYXAgICAgPSAibWFwIgopCgp2YXIgZGVmaW5pdGlvbnMgPSBtYWtlKG1hcFtzdHJpbmddbW9kZWwpCgpmdW5jIHBhcnNlKCkgc3RyaW5nIHsKCXZhciBzd2FnZ2VyIFN3YWdnZXIKCWVyciA6PSBqc29uLlVubWFyc2hhbChbXWJ5dGUoZ2VuZXJhdG9ySnNvbiksICZzd2FnZ2VyKQoJaWYgZXJyICE9IG5pbCB7CgkJZm10LlByaW50ZigidW5tYXJzaGFsIGVycm9yOiAlc1xuIiwgZXJyLkVycm9yKCkpCgkJcmV0dXJuICIiCgl9CgoJZm9yIF8sIHYgOj0gcmFuZ2UgZ2VuZXJhdG9yTW9kZWxzIHsKCQlydCA6PSByZWZsZWN0LlR5cGVPZih2KQoJCXJ2IDo9IHJlZmxlY3QuVmFsdWVPZih2KQoJCXBhcnNlRGVmaW5lcygmcnYsIHJ0KQoJfQoKCWZvciBfLCB2IDo9IHJhbmdlIGRlZmluaXRpb25zIHsKCQlpZiBzd2FnZ2VyLkRlZmluaXRpb25zID09IG5pbCB7CgkJCXN3YWdnZXIuRGVmaW5pdGlvbnMgPSBtYWtlKG1hcFtzdHJpbmddKkRlZmluaXRpb24pCgkJfQoJCW5hbWUsIGRlZmluaXRpb24gOj0gdi50b0RlZmluaXRpb24oKQoJCWlmIGRlZmluaXRpb24gIT0gbmlsIHsKCQkJc3dhZ2dlci5EZWZpbml0aW9uc1tuYW1lXSA9IGRlZmluaXRpb24KCQl9Cgl9CglpZiBzd2FnZ2VyLlN3YWdnZXIgPT0gIiIgewoJCXN3YWdnZXIuU3dhZ2dlciA9ICIyLjAiCgl9CglicywgZXJyIDo9IGpzb24uTWFyc2hhbChzd2FnZ2VyKQoJaWYgZXJyICE9IG5pbCB7CgkJZm10LlByaW50ZigibWFyc2hhbCBlcnJvcjogJXNcbiIsIGVyci5FcnJvcigpKQoJCXJldHVybiAiIgoJfQoJcmV0dXJuIHN0cmluZyhicykKfQoKdHlwZSBtb2RlbCBzdHJ1Y3QgewoJTmFtZSAgICAgICAgc3RyaW5nCglUeXBlICAgICAgICBzdHJpbmcKCURlc2NyaXB0aW9uIHN0cmluZyAgYGpzb246IixvbWl0ZW1wdHkiYAoJSXRlbU9iamVjdCAgKm1vZGVsICBganNvbjoiLG9taXRlbXB0eSJgCglLZXlPYmplY3QgICAqbW9kZWwgIGBqc29uOiIsb21pdGVtcHR5ImAKCVZhbHVlT2JqZWN0ICptb2RlbCAgYGpzb246IixvbWl0ZW1wdHkiYAoJRmllbGRzICAgICAgW11maWVsZCBganNvbjoiLG9taXRlbXB0eSJgCn0KCmZ1bmMgKG0gbW9kZWwpIHRvRGVmaW5pdGlvbigpIChuYW1lIHN0cmluZywgZGVmaW5pdGlvbiAqRGVmaW5pdGlvbikgewoKCWlmIGlzTmVzdGVkT2JqZWN0KG0uTmFtZSkgewoJCXJldHVybgoJfQoJbmFtZSA9IG0uTmFtZQoKCXZhciBkIERlZmluaXRpb24KCWQuVHlwZSA9IG0uVHlwZQoJaWYgbGVuKG0uRmllbGRzKSA+IDAgewoJCXBzIDo9IG1ha2UobWFwW3N0cmluZ11Qcm9wZXJ0eSwgbGVuKG0uRmllbGRzKSkKCQlmb3IgXywgdiA6PSByYW5nZSBtLkZpZWxkcyB7CgkJCXAgOj0gUHJvcGVydHl7fQoJCQlwLlR5cGUgPSB2LlR5cGUKCgkJCWlmIHYuVHlwZSA9PSB0eXBlT2JqZWN0IHsKCQkJCWlmIHYuT2JqZWN0ICE9IG5pbCB7CgkJCQkJaWYgaXNOZXN0ZWRPYmplY3Qodi5PYmplY3QuTmFtZSkgewoJCQkJCQkvLyBuZXN0ZWQgb2JqZWN0CgkJCQkJfSBlbHNlIHsKCQkJCQkJcC5SZWYgPSAiIy9kZWZpbml0aW9ucy8iICsgdi5PYmplY3QuTmFtZQoJCQkJCX0KCQkJCX0KCQkJfQoKCQkJaWYgdi5UeXBlID09IHR5cGVBcnJheSB7CgkJCQlyZWYgOj0gIiMvZGVmaW5pdGlvbnMvIiArIHYuSXRlbU9iamVjdC5OYW1lCgkJCQlpZiB2Lkl0ZW1PYmplY3QuTmFtZSA9PSAiIiB7CgkJCQkJcmVmID0gIiIKCQkJCX0KCQkJCXAuSXRlbXMgPSAmUHJvcGVydHl7CgkJCQkJVHlwZTogdi5JdGVtT2JqZWN0LlR5cGUsCgkJCQkJUmVmOiAgcmVmLAoJCQkJfQoJCQl9CgoJCQlpZiB2LlR5cGUgPT0gdHlwZU1hcCB7CgkJCQlwLlR5cGUgPSB0eXBlT2JqZWN0CgkJCQlwLlByb3BlcnRpZXMgPSAmTmVzdGVkUHJvcGVydHl7CgkJCQkJSWQ6ICAgdi5LZXlPYmplY3QuVHlwZSwKCQkJCQlOYW1lOiB2LlZhbHVlT2JqZWN0LlR5cGUsCgkJCQl9CgkJCX0KCgkJCXBzW3YuTmFtZV0gPSBwCgkJfQoJCWQuUHJvcGVydGllcyA9IHBzCgl9CglkZWZpbml0aW9uID0gJmQKCglyZXR1cm4KfQoKZnVuYyBpc05lc3RlZE9iamVjdChuYW1lIHN0cmluZykgYm9vbCB7CglyZXR1cm4gc3RyaW5ncy5Db250YWlucyhuYW1lLCAic3RydWN0IHsiKQp9Cgp0eXBlIGZpZWxkIHN0cnVjdCB7CglOYW1lICAgICAgICBzdHJpbmcKCVR5cGUgICAgICAgIHN0cmluZwoJRGVzYyAgICAgICAgc3RyaW5nIGBqc29uOiIsb21pdGVtcHR5ImAKCUl0ZW1PYmplY3QgICptb2RlbCBganNvbjoiLG9taXRlbXB0eSJgCglLZXlPYmplY3QgICAqbW9kZWwgYGpzb246IixvbWl0ZW1wdHkiYAoJVmFsdWVPYmplY3QgKm1vZGVsIGBqc29uOiIsb21pdGVtcHR5ImAKCU9iamVjdCAgICAgICptb2RlbCBganNvbjoiLG9taXRlbXB0eSJgCn0KCmZ1bmMgcGFyc2VGaWVsZCh2YWx1ZSByZWZsZWN0LlZhbHVlLCB0eXAgcmVmbGVjdC5UeXBlLCBmZCByZWZsZWN0LlN0cnVjdEZpZWxkKSAqZmllbGQgewoJdmFyIGYgZmllbGQKCWYuTmFtZSA9IHN0cmluZ3MuU3BsaXQoZmQuVGFnLkdldCgianNvbiIpLCAiLCIpWzBdCglpZiBmLk5hbWUgPT0gIi0iIHsKCQlyZXR1cm4gbmlsCgl9CglpZiBmLk5hbWUgPT0gIiIgewoJCWYuTmFtZSA9IGZkLk5hbWUKCX0KCXN3aXRjaCB0eXAuS2luZCgpIHsKCWNhc2UgcmVmbGVjdC5TdHJpbmc6CgkJZi5UeXBlID0gdHlwZVN0cmluZwoJY2FzZSByZWZsZWN0LkludCwgcmVmbGVjdC5JbnQ4LCByZWZsZWN0LkludDE2LCByZWZsZWN0LkludDMyLCByZWZsZWN0LkludDY0LCByZWZsZWN0LlVpbnQsIHJlZmxlY3QuVWludDgsIHJlZmxlY3QuVWludDE2LCByZWZsZWN0LlVpbnQzMiwgcmVmbGVjdC5VaW50NjQ6CgkJZi5UeXBlID0gdHlwZUludAoJY2FzZSByZWZsZWN0LkZsb2F0MzIsIHJlZmxlY3QuRmxvYXQ2NDoKCQlmLlR5cGUgPSB0eXBlTnVtYmVyCgljYXNlIHJlZmxlY3QuU3RydWN0OgoJCWYuVHlwZSA9IHR5cGVPYmplY3QKCQltIDo9IHBhcnNlRGVmaW5lcygmdmFsdWUsIHR5cCkKCQlmLk9iamVjdCA9ICZtCgljYXNlIHJlZmxlY3QuUHRyOgoJCXYsIHQgOj0gaW5kaXJlY3RUeXBlKGZkLlR5cGUpCgkJcmV0dXJuIHBhcnNlRmllbGQodiwgdCwgZmQpCgljYXNlIHJlZmxlY3QuQXJyYXksIHJlZmxlY3QuU2xpY2U6CgkJZi5UeXBlID0gdHlwZUFycmF5CgkJdiwgdCA6PSBpbmRpcmVjdFR5cGUoZmQuVHlwZSkKCQltIDo9IHBhcnNlRGVmaW5lcygmdiwgdCkKCQlmLkl0ZW1PYmplY3QgPSAmbQoJY2FzZSByZWZsZWN0Lk1hcDoKCQlmLlR5cGUgPSB0eXBlTWFwCgkJdiwgdCA6PSBpbmRpcmVjdFR5cGUodHlwLktleSgpKQoJCWttIDo9IHBhcnNlRGVmaW5lcygmdiwgdCkKCQlmLktleU9iamVjdCA9ICZrbQoJCXYsIHQgPSBpbmRpcmVjdFR5cGUodHlwLkVsZW0oKSkKCQl2bSA6PSBwYXJzZURlZmluZXMoJnYsIHQpCgkJZi5WYWx1ZU9iamVjdCA9ICZ2bQoJfQoJcmV0dXJuICZmCn0KCmZ1bmMgbmFtZU9mVHlwZSh0IHJlZmxlY3QuVHlwZSkgc3RyaW5nIHsKCXJldHVybiB0LlN0cmluZygpCn0KCmZ1bmMgaW5kaXJlY3RUeXBlKHQgcmVmbGVjdC5UeXBlKSAocmVmbGVjdC5WYWx1ZSwgcmVmbGVjdC5UeXBlKSB7Cglzd2l0Y2ggdC5LaW5kKCkgewoJY2FzZSByZWZsZWN0LlB0ciwgcmVmbGVjdC5BcnJheSwgcmVmbGVjdC5TbGljZSwgcmVmbGVjdC5NYXA6CgkJcmV0dXJuIHJlZmxlY3QuSW5kaXJlY3QocmVmbGVjdC5OZXcodC5FbGVtKCkpKSwgdC5FbGVtKCkKCX0KCXJldHVybiByZWZsZWN0LkluZGlyZWN0KHJlZmxlY3QuTmV3KHQpKSwgdAp9CgpmdW5jIHBhcnNlRGVmaW5lcyh2ICpyZWZsZWN0LlZhbHVlLCB0IHJlZmxlY3QuVHlwZSkgbW9kZWwgewoJaWYgdiA9PSBuaWwgewoJCXJldHVybiBtb2RlbHt9Cgl9Cglzd2l0Y2ggdC5LaW5kKCkgewoJY2FzZSByZWZsZWN0LlB0ciwgcmVmbGVjdC5NYXAsIHJlZmxlY3QuU2xpY2UsIHJlZmxlY3QuQXJyYXk6CgkJaWYgdi5Jc05pbCgpIHsKCQkJdiwgdCA6PSBpbmRpcmVjdFR5cGUodCkKCQkJcmV0dXJuIHBhcnNlRGVmaW5lcygmdiwgdCkKCQl9Cgl9CgoJaWYgdC5LaW5kKCkgPT0gcmVmbGVjdC5QdHIgewoJCW9iaiA6PSByZWZsZWN0LkluZGlyZWN0KCp2KS5JbnRlcmZhY2UoKQoJCXYgOj0gcmVmbGVjdC5WYWx1ZU9mKG9iaikKCQl0IDo9IHJlZmxlY3QuVHlwZU9mKG9iaikKCQlyZXR1cm4gcGFyc2VEZWZpbmVzKCZ2LCB0KQoJfQoKCWtleSA6PSBuYW1lT2ZUeXBlKHQpCglpZiB2LCBvayA6PSBkZWZpbml0aW9uc1trZXldOyBvayB7CgkJaWYgdi5UeXBlID09IHR5cGVPYmplY3QgJiYgIXN0cmluZ3MuQ29udGFpbnModi5OYW1lLCAic3RydWN0IHsgIikgewoJCQlyZXR1cm4gbW9kZWx7TmFtZTogdi5OYW1lLCBUeXBlOiB2LlR5cGV9CgkJfQoJCXJldHVybiB2Cgl9CgoJdmFyIG0gbW9kZWwKCXN3aXRjaCB0LktpbmQoKSB7CgljYXNlIHJlZmxlY3QuU3RyaW5nOgoJCW0uTmFtZSA9IHR5cGVTdHJpbmcKCQltLlR5cGUgPSB0eXBlU3RyaW5nCgkJcmV0dXJuIG0KCWNhc2UgcmVmbGVjdC5JbnQ6CgkJbS5OYW1lID0gdHlwZUludAoJCW0uVHlwZSA9IHR5cGVJbnQKCQlyZXR1cm4gbQoJY2FzZSByZWZsZWN0LlN0cnVjdDoKCQltLk5hbWUgPSBrZXkKCQltLlR5cGUgPSB0eXBlT2JqZWN0CgkJdmFyIGZpZWxkcyBbXWZpZWxkCgkJZm9yIGkgOj0gMDsgaSA8IHYuTnVtRmllbGQoKTsgaSsrIHsKCQkJdiA6PSB2LkZpZWxkKGkpCgkJCWYgOj0gcGFyc2VGaWVsZCh2LCB0LkZpZWxkKGkpLlR5cGUsIHQuRmllbGQoaSkpCgkJCWlmIGYgPT0gbmlsIHsKCQkJCWNvbnRpbnVlCgkJCX0KCQkJZmllbGRzID0gYXBwZW5kKGZpZWxkcywgKmYpCgkJfQoJCW0uRmllbGRzID0gZmllbGRzCgljYXNlIHJlZmxlY3QuQXJyYXksIHJlZmxlY3QuU2xpY2U6CgkJbS5UeXBlID0gdHlwZUFycmF5CgkJdiwgdCA6PSBpbmRpcmVjdFR5cGUodC5FbGVtKCkpCgkJbW0gOj0gcGFyc2VEZWZpbmVzKCZ2LCB0KQoJCW0uSXRlbU9iamVjdCA9ICZtbQoJY2FzZSByZWZsZWN0Lk1hcDoKCQltLlR5cGUgPSB0eXBlTWFwCgkJdiwgdCA6PSBpbmRpcmVjdFR5cGUodC5LZXkoKSkKCQltbSA6PSBwYXJzZURlZmluZXMoJnYsIHQpCgkJbS5LZXlPYmplY3QgPSAmbW0KCQl2LCB0ID0gaW5kaXJlY3RUeXBlKHQuRWxlbSgpKQoJCW1tID0gcGFyc2VEZWZpbmVzKCZ2LCB0KQoJCW0uVmFsdWVPYmplY3QgPSAmbW0KCX0KCWRlZmluaXRpb25zW2tleV0gPSBtCglpZiBtLlR5cGUgPT0gdHlwZU9iamVjdCAmJiAhc3RyaW5ncy5Db250YWlucyhtLk5hbWUsICJzdHJ1Y3QgeyAiKSB7CgkJcmV0dXJuIG1vZGVse05hbWU6IG0uTmFtZSwgVHlwZTogbS5UeXBlfQoJfQoJcmV0dXJuIG0KfQo="

var templateServerBase64 = "cGFja2FnZSBzYW1wbGVfc3dhZ2dlcgoKaW1wb3J0ICgKCSJodG1sL3RlbXBsYXRlIgoJIm5ldC9odHRwIgopCgp2YXIgc2VydmVySnNvbiBzdHJpbmcKCnZhciBodG1sVGVtcCA9IGAKPCEtLSBIVE1MIGZvciBzdGF0aWMgZGlzdHJpYnV0aW9uIGJ1bmRsZSBidWlsZCAtLT4KPCFET0NUWVBFIGh0bWw+CjxodG1sIGxhbmc9ImVuIj4KPGhlYWQ+CiAgICA8bWV0YSBjaGFyc2V0PSJVVEYtOCI+CiAgICA8dGl0bGU+U3dhZ2dlciBVSTwvdGl0bGU+CiAgICA8bGluayByZWw9InN0eWxlc2hlZXQiIHR5cGU9InRleHQvY3NzIgogICAgICAgICAgaHJlZj0iaHR0cHM6Ly9jZG5qcy5jbG91ZGZsYXJlLmNvbS9hamF4L2xpYnMvc3dhZ2dlci11aS8zLjE4LjIvc3dhZ2dlci11aS5jc3MiPgogICAgPGxpbmsgcmVsPSJpY29uIiB0eXBlPSJpbWFnZS9wbmciIGhyZWY9ImRhdGE6aW1hZ2UvcG5nO2Jhc2U2NCxpVkJPUncwS0dnb0FBQUFOU1VoRVVnQUFBQ0FBQUFBZ0NBWUFBQUJ6ZW5yMEFBQUVQRWxFUVZSNEFiMVhBOHhsV1F4K2E5dTJiY1JleDE3YnRqMUc4TnUyYmR1MmJmT2kwMi95empOL05XbnVZZHRiSDQyam9LcnFxYkt5K2FTc1NEL3lOMEtTMTZ0NFBBS1U1STBhL2taaEQyZHdWck5Ub0tqeWhVejRlMFdSK29oVWNnUndsZ1g1a2U5ZWJJKytuVCtXM21ZaVU0SXdyOUh3ZEFPVnRIcFNZdVhQRkY3MElaREhQMUZ4cXdmdjFSUE9DTUJkcHZFdWFEbkpYTG1ZL3lCT0VGdmZYS2E4cHVQMGI4VGQ5Sm1ueGliK0UzRVg1VFllNHp0TE9xRlppQVRRZEpUNTFYeWhRVnl1NmdxaFg0S3ZBWEduOEplZ3E2bXlNd2cwaEZtYW1QYTFkdjljTUdmSG9wRDh0MEZzV3hpYy95YXh3eG9Jb1Y1c3krWnhncmxIeGlzZ3NDUG9udmFpb1JBSkZuMENEZ2QxQVVQeTM4TEZIY1dndkRkSTBJZGptcXIrUXZiWUNXS282Z28ydXZpMXp6bFUwUkZBcSt0ek5EUlZhNWZSNEZRTnJXN013LzcwdGUrNVJuc1ZuUUc2NkRBS1VjUzU4SFpUaDRzdS9ZSUE0M050bE4xd3lLNEEyZlVIYVd5MmhRQ3haVjhiN2YwY2RKVXVPcEMwZExabnUvUmdNWS9EeDVRZ29nQ3dQL29oaDlYOVg5UjlCS2p0aVREYnkyazRvdlVGdWUra0x5QjFpcEJEREp0ZWFCbE1JY0R2b1RjNUxBQzBDR2dkVERQYit6djhEbDFvTXUrbk5WQUZKc2hpT0dBdVFCb0JmZ3U1M21FQmZneThIRXlvZFNqZDBqNThTVVRFejlCQUJDWWxyUjRXRC9lTmwwRlMrc3JuYkljRitOTDdESVFkRFV4V1dkd3ZhblVUR29qU29LcGhnbnh1ZW5CZjlBUElDZFE3WG9vNWZlNTFtcEVnWUFRVWMremhETVpkb3dWZ1lORjNFaXArSUFEenJ0T2duR0tDb21KNEtMTnVIM0Y0MHZMYU5CMktmUnhyMUQ2Y1NTdnJzL1JyeUhWZ1RKUHpYVFMxME1Qak05bnUxL0xaR2VvWXljRlpPaGo3S0MydFRvSUdaZFVmTUtJZFZ2aStNTUdZTlFINDBuNWNwcVcxS1NiMm1GYUFiT1FEK0FNRUFIT2FYdXlGQVBRckN3RGhPa2Z5Y0pZT3hEeENpNnNUb0lIUXRDNEFxOWlxQ2ZiSFBLdzFRUW5tOUFXcjkyc2pFNXdKTkRMQkZ6b1Q1TU1FRU42dUNTSXdLYmJtaEJQQ0NjOXkyZ243SnlzdE8yR0xjRUlwWm5mQ01NQm1HQ0pkQ3dFUWhwSkJJcnB6RHhMUjdRYUpTSHBhbTRybFBpemtOaDQxdTFEZEZVcUFmYzZrNHNoN2JhVGl3OElCQjhEYnBCZ3RvWk14dWhCVCtpVzJVR0FRR1hhWkkzeEhaNXNKRUZmMmpVa3h1cExXTmhkRkV2clpxUE5WVkdVS0c1V2RnV2JsR0tWMWJXT0JocWJyN0FtQU5NdG5GNkU1K3NiM1BLTzk4ZzUvQW9DWFdjZXNHRFFrYUtOMnVpRUp6SHZOdENHeDJKSWxhT09UM05OZjJqSG1ybW5QZzZad3ZDVHdzdHFVb25FVVFrQVQyLy96MXczNlFibkZibnVPMWxrSUFYWEJKMzRXanVrRW92dEJLOGMwREppcjF6cjhNTkYycnlTaUk3ZnhDUDF0SVU5WWFEZ1FhbnhuMGVCaHNwa0VtbHQ1bXIxcjhqUkRKS0NlSTUranFBQXh4aG9pd09ScHBzd3c4L2UzOVZoRnVPQ2h5Y0lNa0lPQUpJTTQzOWJqMUlKR1RrY1BoemFLdnpHb1pDaW5RSXhSV0pEYkdaL0ZXVWZwbmdDbGVUTmRta3JoSWdBQUFBQkpSVTVFcmtKZ2dnPT0KIiBzaXplcz0iMzJ4MzIiLz4KICAgIDxsaW5rIHJlbD0iaWNvbiIgdHlwZT0iaW1hZ2UvcG5nIiBocmVmPSJkYXRhOmltYWdlL3BuZztiYXNlNjQsaVZCT1J3MEtHZ29BQUFBTlNVaEVVZ0FBQUJBQUFBQVFDQVlBQUFBZjgvOWhBQUFCaEVsRVFWUjRBWlZUQTB4MWNSejlqUEhEN0RDbktjMWh0bXMyc3B2NXNtdklOUy9ialhGNHhwUnR6SHZ2ZjAvLzgyemM3ZkxnL3ZqSi8xQVVFUzhVVzZOUXhLRzhQL0YwUGpjU2N4TURoY28zU1ZJSlliVnFqNmN4dmwySTlybE04QnlUejlyaktSQ1RabzNrQmhQUDNqeWIwVFNWaXBLQlQwSFBSb25kUEpzZ1RlWjlUT1FIRmNYMTQvOUpESHZXamY5em1UUzZjMlpvcmordmF4cHdjbmNRSUR5NTI4ZUdwdEVaU1Fxb3NkZUVlVE5uRnpGVUpMVmpmM0g3WW5HL2E0NG5IVkd3d2l5U0MzaDhPMGJsOE84QWcvS2hIM2g4UDNHOXk4SVdnRnBHOE1SSzgrUGtiakhNRjJ0Z09uM0xlZWlZeTBMSGZEWjZsM0xSTkowRzAvbUs1SlNRaTdiWkRGRHJZMERRZkw0cXlUVElwNWdueldnQTQ5a3lwblpMZlF4Q3BQQXJSQXJIZ1Ntd0VKcmpxZGlMZU9Rb29ydU5iQTBCdG9vdDh6YzR2dDNIcHJiSjJjWmsyRnh0OUF5U0NYVlJEdEwxczlIeGQ5OVJGck0wWVNTaHhNUW9WcnhHMmQra2tlbXdKaXdTSzgyVHp4d2NZdHpLQUhGMDY4d3RGSW4rL0E5dE1tcUk3TXh6R0FBQUFBQkpSVTVFcmtKZ2dnPT0KIiBzaXplcz0iMTZ4MTYiLz4KICAgIDxzdHlsZT4KICAgICAgICBodG1sIHsKICAgICAgICAgICAgYm94LXNpemluZzogYm9yZGVyLWJveDsKICAgICAgICAgICAgb3ZlcmZsb3c6IC1tb3otc2Nyb2xsYmFycy12ZXJ0aWNhbDsKICAgICAgICAgICAgb3ZlcmZsb3cteTogc2Nyb2xsOwogICAgICAgIH0KCiAgICAgICAgKiwKICAgICAgICAqOmJlZm9yZSwKICAgICAgICAqOmFmdGVyIHsKICAgICAgICAgICAgYm94LXNpemluZzogaW5oZXJpdDsKICAgICAgICB9CgogICAgICAgIGJvZHkgewogICAgICAgICAgICBtYXJnaW46IDA7CiAgICAgICAgICAgIGJhY2tncm91bmQ6ICNmYWZhZmE7CiAgICAgICAgfQogICAgPC9zdHlsZT4KPC9oZWFkPgoKPGJvZHk+CjxkaXYgaWQ9InN3YWdnZXItdWkiPjwvZGl2Pgo8c2NyaXB0IHNyYz0iaHR0cHM6Ly9jZG5qcy5jbG91ZGZsYXJlLmNvbS9hamF4L2xpYnMvc3dhZ2dlci11aS8zLjE4LjIvc3dhZ2dlci11aS1idW5kbGUuanMiPjwvc2NyaXB0Pgo8c2NyaXB0IHNyYz0iaHR0cHM6Ly9jZG5qcy5jbG91ZGZsYXJlLmNvbS9hamF4L2xpYnMvc3dhZ2dlci11aS8zLjE4LjIvc3dhZ2dlci11aS1zdGFuZGFsb25lLXByZXNldC5qcyI+PC9zY3JpcHQ+CjxzY3JpcHQ+CgogICAgdmFyIHNwZWMgPSB7ey5TcGVjfX07CgoJc3BlYyA9IEpTT04ucGFyc2Uoc3BlYyk7CgogICAgd2luZG93Lm9ubG9hZCA9IGZ1bmN0aW9uICgpIHsKICAgICAgICBjb25zdCB1aSA9IFN3YWdnZXJVSUJ1bmRsZSh7CiAgICAgICAgICAgIHNwZWM6IHNwZWMsCiAgICAgICAgICAgIGRvbV9pZDogJyNzd2FnZ2VyLXVpJywKICAgICAgICAgICAgZGVlcExpbmtpbmc6IHRydWUsCiAgICAgICAgICAgIHByZXNldHM6IFsKICAgICAgICAgICAgICAgIFN3YWdnZXJVSUJ1bmRsZS5wcmVzZXRzLmFwaXMsCiAgICAgICAgICAgICAgICBTd2FnZ2VyVUlTdGFuZGFsb25lUHJlc2V0LnNsaWNlKDEpIC8vIGhlcmUKICAgICAgICAgICAgXSwKICAgICAgICAgICAgbGF5b3V0OiAiU3RhbmRhbG9uZUxheW91dCIKICAgICAgICB9KTsKICAgICAgICB3aW5kb3cudWkgPSB1aTsKICAgIH0KPC9zY3JpcHQ+CjwvYm9keT4KPC9odG1sPgpgCgpmdW5jIFNlcnZlckhUVFAodyBodHRwLlJlc3BvbnNlV3JpdGVyLCByICpodHRwLlJlcXVlc3QpIHsKCWlmIHNlcnZlckpzb24gPT0gIiIgewoJCXNlcnZlckpzb24gPSBwYXJzZSgpCgkJaWYgc2VydmVySnNvbiA9PSAiIiB7CgkJCXNlcnZlckpzb24gPSAie30iCgkJfQoJfQoJdCwgZXJyIDo9IHRlbXBsYXRlLk5ldygic3dhZ2dlciIpLlBhcnNlKGh0bWxUZW1wKQoJaWYgZXJyICE9IG5pbCB7CgkJdy5Xcml0ZShbXWJ5dGUoZXJyLkVycm9yKCkpKQoJCXJldHVybgoJfQoJZXJyID0gdC5FeGVjdXRlKHcsIG1hcFtzdHJpbmddc3RyaW5neyJTcGVjIjogc2VydmVySnNvbn0pCglpZiBlcnIgIT0gbmlsIHsKCQl3LldyaXRlKFtdYnl0ZShlcnIuRXJyb3IoKSkpCgl9Cn0K"

const templateVars = `package sample_swagger

import (
	{{Imports}}
)

var generatorJson = {{GeneratorJson}}

var generatorModels = []interface{}{
	{{GeneratorModels}}
}

`
