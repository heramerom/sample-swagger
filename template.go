package main

var templateModelBase64 = "cGFja2FnZSBzYW1wbGVfc3dhZ2dlcgoKdHlwZSBJbmZvIHN0cnVjdCB7CglEZXNjcmlwdGlvbiAgICBzdHJpbmcgYGpzb246ImRlc2NyaXB0aW9uImAKCVZlcnNpb24gICAgICAgIHN0cmluZyBganNvbjoidmVyc2lvbiJgCglUaXRsZSAgICAgICAgICBzdHJpbmcgYGpzb246InRpdGxlImAKCVRlcm1zT2ZTZXJ2aWNlIHN0cmluZyBganNvbjoidGVybXNPZlNlcnZpY2UiYAoJQ29udGFjdCAgICAgICAgc3RydWN0IHsKCQlFbWFpbCBzdHJpbmcgYGpzb246ImVtYWlsImAKCX0gYGpzb246ImNvbnRhY3QiYAoJTGljZW5zZSBzdHJ1Y3QgewoJCU5hbWUgc3RyaW5nIGBqc29uOiJuYW1lImAKCQlVUkwgIHN0cmluZyBganNvbjoidXJsImAKCX0gYGpzb246ImxpY2Vuc2UiYAp9Cgp0eXBlIFJvdXRlciBzdHJ1Y3QgewoJVGFncyAgICAgICAgW11zdHJpbmcgICAgICAgICAgICBganNvbjoidGFncyJgCglTdW1tYXJ5ICAgICBzdHJpbmcgICAgICAgICAgICAgIGBqc29uOiJzdW1tYXJ5ImAKCURlc2NyaXB0aW9uIHN0cmluZyAgICAgICAgICAgICAgYGpzb246ImRlc2NyaXB0aW9uImAKCU9wZXJhdGlvbklEIHN0cmluZyAgICAgICAgICAgICAgYGpzb246Im9wZXJhdGlvbklkImAKCUNvbnN1bWVzICAgIFtdc3RyaW5nICAgICAgICAgICAgYGpzb246ImNvbnN1bWVzImAKCVByb2R1Y2VzICAgIFtdc3RyaW5nICAgICAgICAgICAgYGpzb246InByb2R1Y2VzImAKCVBhcmFtZXRlcnMgIFtdUGFyYW1ldGVyICAgICAgICAgYGpzb246InBhcmFtZXRlcnMiYAoJUmVzcG9uc2VzICAgbWFwW3N0cmluZ11SZXNwb25zZSBganNvbjoicmVzcG9uc2VzImAKfQoKdHlwZSBTY2hlbWEgc3RydWN0IHsKCVJlZiBzdHJpbmcgYGpzb246IiRyZWYsb21pdGVtcHR5ImAKfQoKdHlwZSBQYXJhbWV0ZXIgc3RydWN0IHsKCUluICAgICAgICAgIHN0cmluZyAgYGpzb246ImluImAKCU5hbWUgICAgICAgIHN0cmluZyAgYGpzb246Im5hbWUiYAoJVHlwZSAgICAgICAgc3RyaW5nICBganNvbjoidHlwZSJgCglEZXNjcmlwdGlvbiBzdHJpbmcgIGBqc29uOiJkZXNjcmlwdGlvbiJgCglSZXF1aXJlZCAgICBib29sICAgIGBqc29uOiJyZXF1aXJlZCJgCglTY2hlbWEgICAgICAqU2NoZW1hIGBqc29uOiJzY2hlbWEsb21pdGVtcHR5ImAKfQoKdHlwZSBSZXNwb25zZSBzdHJ1Y3QgewoJRGVzY3JpcHRpb24gc3RyaW5nIGBqc29uOiJkZXNjcmlwdGlvbiJgCglTY2hlbWEgICAgICBzdHJ1Y3QgewoJCVR5cGUgIHN0cmluZyBganNvbjoidHlwZSJgCgkJSXRlbXMgc3RydWN0IHsKCQkJUmVmIHN0cmluZyBganNvbjoiJHJlZiJgCgkJfSBganNvbjoiaXRlbXMiYAoJCVJlZiBzdHJpbmcgYGpzb246IiRyZWYiYAoJfSBganNvbjoic2NoZW1hImAKfQoKdHlwZSBQcm9wZXJ0eSBzdHJ1Y3QgewoJVHlwZSAgICAgICAgc3RyaW5nICAgICAgICAgIGBqc29uOiJ0eXBlLG9taXRlbXB0eSJgCglGb3JtYXQgICAgICBzdHJpbmcgICAgICAgICAgYGpzb246ImZvcm1hdCxvbWl0ZW1wdHkiYAoJRGVzY3JpcHRpb24gc3RyaW5nICAgICAgICAgIGBqc29uOiJkZXNjcmlwdGlvbixvbWl0ZW1wdHkiYAoJUmVmICAgICAgICAgc3RyaW5nICAgICAgICAgIGBqc29uOiIkcmVmLG9taXRlbXB0eSJgCglJdGVtcyAgICAgICAqUHJvcGVydHkgICAgICAgYGpzb246Iml0ZW1zLG9taXRlbXB0eSJgCglQcm9wZXJ0aWVzICAqTmVzdGVkUHJvcGVydHkgYGpzb246InByb3BlcnRpZXMsb21pdGVtcHR5ImAKfQoKdHlwZSBOZXN0ZWRQcm9wZXJ0eSBzdHJ1Y3QgewoJSWQgICBzdHJpbmcgYGpzb246ImlkImAKCU5hbWUgc3RyaW5nIGBqc29uOiJuYW1lImAKfQoKdHlwZSBEZWZpbml0aW9uIHN0cnVjdCB7CglUeXBlICAgICAgIHN0cmluZyAgICAgICAgICAgICAgYGpzb246InR5cGUiYAoJUHJvcGVydGllcyBtYXBbc3RyaW5nXVByb3BlcnR5IGBqc29uOiJwcm9wZXJ0aWVzImAKfQoKdHlwZSBTd2FnZ2VyIHN0cnVjdCB7CglTd2FnZ2VyICAgICBzdHJpbmcgICAgICAgICAgICAgICAgIGBqc29uOiJzd2FnZ2VyImAKCUluZm8gICAgICAgICpJbmZvICAgICAgICAgICAgICAgICAgYGpzb246ImluZm8iYAoJSG9zdCAgICAgICAgc3RyaW5nICAgICAgICAgICAgICAgICBganNvbjoiaG9zdCJgCglCYXNlUGF0aCAgICBzdHJpbmcgICAgICAgICAgICAgICAgIGBqc29uOiJiYXNlUGF0aCJgCglTY2hlbWVzICAgICBbXXN0cmluZyAgICAgICAgICAgICAgIGBqc29uOiJzY2hlbWVzImAKCVBhdGhzICAgICAgIG1hcFtzdHJpbmddTWV0aG9kICAgICAgYGpzb246InBhdGhzImAKCURlZmluaXRpb25zIG1hcFtzdHJpbmddKkRlZmluaXRpb24gYGpzb246ImRlZmluaXRpb25zImAKfQoKdHlwZSBNZXRob2QgbWFwW3N0cmluZ11Sb3V0ZXIKCmZ1bmMgTWFwVHlwZSh0eXAgc3RyaW5nKSBzdHJpbmcgewoJc3dpdGNoIHR5cCB7CgljYXNlICJpbnQiLCAiaW50OCIsICJpbnQxNiIsICJpbnQzMiIsICJpbnQ2NCIsICJ1aW50IiwgInVpbnQ4IiwgInVpbnQxNiIsICJ1aW50MzIiLCAidWludDY0IjoKCQlyZXR1cm4gImludGVnZXIiCgljYXNlICJzdHJpbmciLCAic3RyIiwgInMiOgoJCXJldHVybiAic3RyaW5nIgoJY2FzZSAiYm9vbCIsICJib29sZWFuIiwgImIiOgoJCXJldHVybiAiYm9vbGVhbiIKCWNhc2UgIm9iamVjdCIsICJvYmoiLCAibyI6CgkJcmV0dXJuICJvYmplY3QiCgljYXNlICJmbG9hdDMyIiwgImZsb2F0NjQiOgoJCXJldHVybiAibnVtYmVyIgoJY2FzZSAiYXJyYXkiLCAic2xpY2UiOgoJCXJldHVybiAiYXJyYXkiCgljYXNlICJtYXAiOgoJCXJldHVybiAibWFwIgoJfQoJcmV0dXJuICJ7fSIgLy8gYW55Cn0K"

var templateParseBase64 = ""

var templateServerBase64 = "cGFja2FnZSBzYW1wbGVfc3dhZ2dlcgoKaW1wb3J0ICgKCSJodG1sL3RlbXBsYXRlIgoJIm5ldC9odHRwIgopCgp2YXIgc2VydmVySnNvbiBzdHJpbmcKCnZhciBodG1sVGVtcCA9IGAKPCEtLSBIVE1MIGZvciBzdGF0aWMgZGlzdHJpYnV0aW9uIGJ1bmRsZSBidWlsZCAtLT4KPCFET0NUWVBFIGh0bWw+CjxodG1sIGxhbmc9ImVuIj4KPGhlYWQ+CiAgICA8bWV0YSBjaGFyc2V0PSJVVEYtOCI+CiAgICA8dGl0bGU+U3dhZ2dlciBVSTwvdGl0bGU+CiAgICA8bGluayByZWw9InN0eWxlc2hlZXQiIHR5cGU9InRleHQvY3NzIgogICAgICAgICAgaHJlZj0iaHR0cHM6Ly9jZG5qcy5jbG91ZGZsYXJlLmNvbS9hamF4L2xpYnMvc3dhZ2dlci11aS8zLjE4LjIvc3dhZ2dlci11aS5jc3MiPgogICAgPGxpbmsgcmVsPSJpY29uIiB0eXBlPSJpbWFnZS9wbmciIGhyZWY9ImRhdGE6aW1hZ2UvcG5nO2Jhc2U2NCxpVkJPUncwS0dnb0FBQUFOU1VoRVVnQUFBQ0FBQUFBZ0NBWUFBQUJ6ZW5yMEFBQUVQRWxFUVZSNEFiMVhBOHhsV1F4K2E5dTJiY1JleDE3YnRqMUc4TnUyYmR1MmJmT2kwMi95empOL05XbnVZZHRiSDQyam9LcnFxYkt5K2FTc1NEL3lOMEtTMTZ0NFBBS1U1STBhL2taaEQyZHdWck5Ub0tqeWhVejRlMFdSK29oVWNnUndsZ1g1a2U5ZWJJKytuVCtXM21ZaVU0SXdyOUh3ZEFPVnRIcFNZdVhQRkY3MElaREhQMUZ4cXdmdjFSUE9DTUJkcHZFdWFEbkpYTG1ZL3lCT0VGdmZYS2E4cHVQMGI4VGQ5Sm1ueGliK0UzRVg1VFllNHp0TE9xRlppQVRRZEpUNTFYeWhRVnl1NmdxaFg0S3ZBWEduOEplZ3E2bXlNd2cwaEZtYW1QYTFkdjljTUdmSG9wRDh0MEZzV3hpYy95YXh3eG9Jb1Y1c3krWnhncmxIeGlzZ3NDUG9udmFpb1JBSkZuMENEZ2QxQVVQeTM4TEZIY1dndkRkSTBJZGptcXIrUXZiWUNXS282Z28ydXZpMXp6bFUwUkZBcSt0ek5EUlZhNWZSNEZRTnJXN013LzcwdGUrNVJuc1ZuUUc2NkRBS1VjUzU4SFpUaDRzdS9ZSUE0M050bE4xd3lLNEEyZlVIYVd5MmhRQ3haVjhiN2YwY2RKVXVPcEMwZExabnUvUmdNWS9EeDVRZ29nQ3dQL29oaDlYOVg5UjlCS2p0aVREYnkyazRvdlVGdWUra0x5QjFpcEJEREp0ZWFCbE1JY0R2b1RjNUxBQzBDR2dkVERQYit6djhEbDFvTXUrbk5WQUZKc2hpT0dBdVFCb0JmZ3U1M21FQmZneThIRXlvZFNqZDBqNThTVVRFejlCQUJDWWxyUjRXRC9lTmwwRlMrc3JuYkljRitOTDdESVFkRFV4V1dkd3ZhblVUR29qU29LcGhnbnh1ZW5CZjlBUElDZFE3WG9vNWZlNTFtcEVnWUFRVWMremhETVpkb3dWZ1lORjNFaXArSUFEenJ0T2duR0tDb21KNEtMTnVIM0Y0MHZMYU5CMktmUnhyMUQ2Y1NTdnJzL1JyeUhWZ1RKUHpYVFMxME1Qak05bnUxL0xaR2VvWXljRlpPaGo3S0MydFRvSUdaZFVmTUtJZFZ2aStNTUdZTlFINDBuNWNwcVcxS1NiMm1GYUFiT1FEK0FNRUFIT2FYdXlGQVBRckN3RGhPa2Z5Y0pZT3hEeENpNnNUb0lIUXRDNEFxOWlxQ2ZiSFBLdzFRUW5tOUFXcjkyc2pFNXdKTkRMQkZ6b1Q1TU1FRU42dUNTSXdLYmJtaEJQQ0NjOXkyZ243SnlzdE8yR0xjRUlwWm5mQ01NQm1HQ0pkQ3dFUWhwSkJJcnB6RHhMUjdRYUpTSHBhbTRybFBpemtOaDQxdTFEZEZVcUFmYzZrNHNoN2JhVGl3OElCQjhEYnBCZ3RvWk14dWhCVCtpVzJVR0FRR1hhWkkzeEhaNXNKRUZmMmpVa3h1cExXTmhkRkV2clpxUE5WVkdVS0c1V2RnV2JsR0tWMWJXT0JocWJyN0FtQU5NdG5GNkU1K3NiM1BLTzk4ZzUvQW9DWFdjZXNHRFFrYUtOMnVpRUp6SHZOdENHeDJKSWxhT09UM05OZjJqSG1ybW5QZzZad3ZDVHdzdHFVb25FVVFrQVQyLy96MXczNlFibkZibnVPMWxrSUFYWEJKMzRXanVrRW92dEJLOGMwREppcjF6cjhNTkYycnlTaUk3ZnhDUDF0SVU5WWFEZ1FhbnhuMGVCaHNwa0VtbHQ1bXIxcjhqUkRKS0NlSTUranFBQXh4aG9pd09ScHBzd3c4L2UzOVZoRnVPQ2h5Y0lNa0lPQUpJTTQzOWJqMUlKR1RrY1BoemFLdnpHb1pDaW5RSXhSV0pEYkdaL0ZXVWZwbmdDbGVUTmRta3JoSWdBQUFBQkpSVTVFcmtKZ2dnPT0KIiBzaXplcz0iMzJ4MzIiLz4KICAgIDxsaW5rIHJlbD0iaWNvbiIgdHlwZT0iaW1hZ2UvcG5nIiBocmVmPSJkYXRhOmltYWdlL3BuZztiYXNlNjQsaVZCT1J3MEtHZ29BQUFBTlNVaEVVZ0FBQUJBQUFBQVFDQVlBQUFBZjgvOWhBQUFCaEVsRVFWUjRBWlZUQTB4MWNSejlqUEhEN0RDbktjMWh0bXMyc3B2NXNtdklOUy9ialhGNHhwUnR6SHZ2ZjAvLzgyemM3ZkxnL3ZqSi8xQVVFUzhVVzZOUXhLRzhQL0YwUGpjU2N4TURoY28zU1ZJSlliVnFqNmN4dmwySTlybE04QnlUejlyaktSQ1RabzNrQmhQUDNqeWIwVFNWaXBLQlQwSFBSb25kUEpzZ1RlWjlUT1FIRmNYMTQvOUpESHZXamY5em1UUzZjMlpvcmordmF4cHdjbmNRSUR5NTI4ZUdwdEVaU1Fxb3NkZUVlVE5uRnpGVUpMVmpmM0g3WW5HL2E0NG5IVkd3d2l5U0MzaDhPMGJsOE84QWcvS2hIM2g4UDNHOXk4SVdnRnBHOE1SSzgrUGtiakhNRjJ0Z09uM0xlZWlZeTBMSGZEWjZsM0xSTkowRzAvbUs1SlNRaTdiWkRGRHJZMERRZkw0cXlUVElwNWdueldnQTQ5a3lwblpMZlF4Q3BQQXJSQXJIZ1Ntd0VKcmpxZGlMZU9Rb29ydU5iQTBCdG9vdDh6YzR2dDNIcHJiSjJjWmsyRnh0OUF5U0NYVlJEdEwxczlIeGQ5OVJGck0wWVNTaHhNUW9WcnhHMmQra2tlbXdKaXdTSzgyVHp4d2NZdHpLQUhGMDY4d3RGSW4rL0E5dE1tcUk3TXh6R0FBQUFBQkpSVTVFcmtKZ2dnPT0KIiBzaXplcz0iMTZ4MTYiLz4KICAgIDxzdHlsZT4KICAgICAgICBodG1sIHsKICAgICAgICAgICAgYm94LXNpemluZzogYm9yZGVyLWJveDsKICAgICAgICAgICAgb3ZlcmZsb3c6IC1tb3otc2Nyb2xsYmFycy12ZXJ0aWNhbDsKICAgICAgICAgICAgb3ZlcmZsb3cteTogc2Nyb2xsOwogICAgICAgIH0KCiAgICAgICAgKiwKICAgICAgICAqOmJlZm9yZSwKICAgICAgICAqOmFmdGVyIHsKICAgICAgICAgICAgYm94LXNpemluZzogaW5oZXJpdDsKICAgICAgICB9CgogICAgICAgIGJvZHkgewogICAgICAgICAgICBtYXJnaW46IDA7CiAgICAgICAgICAgIGJhY2tncm91bmQ6ICNmYWZhZmE7CiAgICAgICAgfQogICAgPC9zdHlsZT4KPC9oZWFkPgoKPGJvZHk+CjxkaXYgaWQ9InN3YWdnZXItdWkiPjwvZGl2Pgo8c2NyaXB0IHNyYz0iaHR0cHM6Ly9jZG5qcy5jbG91ZGZsYXJlLmNvbS9hamF4L2xpYnMvc3dhZ2dlci11aS8zLjE4LjIvc3dhZ2dlci11aS1idW5kbGUuanMiPjwvc2NyaXB0Pgo8c2NyaXB0IHNyYz0iaHR0cHM6Ly9jZG5qcy5jbG91ZGZsYXJlLmNvbS9hamF4L2xpYnMvc3dhZ2dlci11aS8zLjE4LjIvc3dhZ2dlci11aS1zdGFuZGFsb25lLXByZXNldC5qcyI+PC9zY3JpcHQ+CjxzY3JpcHQ+CgogICAgdmFyIHNwZWMgPSB7ey5TcGVjfX07CgoJc3BlYyA9IEpTT04ucGFyc2Uoc3BlYyk7CgogICAgd2luZG93Lm9ubG9hZCA9IGZ1bmN0aW9uICgpIHsKICAgICAgICBjb25zdCB1aSA9IFN3YWdnZXJVSUJ1bmRsZSh7CiAgICAgICAgICAgIHNwZWM6IHNwZWMsCiAgICAgICAgICAgIGRvbV9pZDogJyNzd2FnZ2VyLXVpJywKICAgICAgICAgICAgZGVlcExpbmtpbmc6IHRydWUsCiAgICAgICAgICAgIHByZXNldHM6IFsKICAgICAgICAgICAgICAgIFN3YWdnZXJVSUJ1bmRsZS5wcmVzZXRzLmFwaXMsCiAgICAgICAgICAgICAgICBTd2FnZ2VyVUlTdGFuZGFsb25lUHJlc2V0LnNsaWNlKDEpIC8vIGhlcmUKICAgICAgICAgICAgXSwKICAgICAgICAgICAgbGF5b3V0OiAiU3RhbmRhbG9uZUxheW91dCIKICAgICAgICB9KTsKICAgICAgICB3aW5kb3cudWkgPSB1aTsKICAgIH0KPC9zY3JpcHQ+CjwvYm9keT4KPC9odG1sPgpgCgpmdW5jIFNlcnZlckhUVFAodyBodHRwLlJlc3BvbnNlV3JpdGVyLCByICpodHRwLlJlcXVlc3QpIHsKCWlmIHNlcnZlckpzb24gPT0gIiIgewoJCXNlcnZlckpzb24gPSBwYXJzZSgpCgkJaWYgc2VydmVySnNvbiA9PSAiIiB7CgkJCXNlcnZlckpzb24gPSAie30iCgkJfQoJfQoJdCwgZXJyIDo9IHRlbXBsYXRlLk5ldygic3dhZ2dlciIpLlBhcnNlKGh0bWxUZW1wKQoJaWYgZXJyICE9IG5pbCB7CgkJdy5Xcml0ZShbXWJ5dGUoZXJyLkVycm9yKCkpKQoJCXJldHVybgoJfQoJZXJyID0gdC5FeGVjdXRlKHcsIG1hcFtzdHJpbmddc3RyaW5neyJTcGVjIjogc2VydmVySnNvbn0pCglpZiBlcnIgIT0gbmlsIHsKCQl3LldyaXRlKFtdYnl0ZShlcnIuRXJyb3IoKSkpCgl9Cn0K"

const templateVars = `package sample_swagger

import (
	{{Imports}}
)

var generatorJson = {{GeneratorJson}}

var generatorModels = []interface{}{
	{{GeneratorModels}}
}

`
